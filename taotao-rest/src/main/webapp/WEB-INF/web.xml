<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="taotao" version="2.5">

  <display-name>taotao-rest</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>

  <!-- Spring和mybatis的配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/applicationContext-*.xml</param-value>
  </context-param>

  <!-- Spring监听器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <!-- ############################################ filter start  ############################################ -->
  <!-- 编码过滤器 -->
  <!-- 解决post乱码 -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- druid 数据源，用于采集 web-jdbc 关联监控的数据 -->
  <!-- 具体参考官网：https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_%E9%85%8D%E7%BD%AEWebStatFilter-->
  <!--    <filter>
          <filter-name>DruidWebStatFilter</filter-name>
          <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
          <init-param>
              <param-name>exclusions</param-name>
              <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
          </init-param>
          <init-param>
              <param-name>profileEnable</param-name>
              <param-value>true</param-value>
          </init-param>
      </filter>
      <filter-mapping>
          <filter-name>DruidWebStatFilter</filter-name>
          <url-pattern>/*</url-pattern>
      </filter-mapping>-->



  <!-- ############################################ filter end  ############################################ -->


  <!-- ############################################ servlet start  ############################################ -->


  <!-- Spring MVC servlet -->
  <!-- springmvc的前端控制器 -->
  <servlet>
    <servlet-name>taotao-rest</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- contextConfigLocation不是必须的， 如果不配置contextConfigLocation， springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml" -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>taotao-rest</servlet-name>
    <!--RESTful方式配置为/-->
    <!--DispatcherServlet拦截/开头的所有请求，对静态资源的访问就报错.
    所以需要通过设置对静态资源进行解析.<mvc:resources mapping="/css/**" location="/WEB-INF/css/"/> -->
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
  <!--    <welcome-file-list>
          <welcome-file>/index.jsp</welcome-file>
      </welcome-file-list>-->


  <!--展示Druid的统计信息-->
  <!--具体可以看官网信息：https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE-->
  <!--    <servlet>
          <servlet-name>DruidStatView</servlet-name>
          <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
      </servlet>
      <servlet-mapping>
          <servlet-name>DruidStatView</servlet-name>
          &lt;!&ndash;访问路径eg：http://localhost:8080/druid/index.html &ndash;&gt;
          <url-pattern>/druid/*</url-pattern>
      </servlet-mapping>
      -->

  <!-- ############################################ servlet end  ############################################ -->




</web-app>
